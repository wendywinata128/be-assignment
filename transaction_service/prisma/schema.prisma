// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PaymentAccount {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  name        String        @db.VarChar(255)
  amount      Float
  userId      String
  currency    String
  Transaction Transaction[]
  TransactionRecurring TransactionRecurring[]
}

model Transaction {
  id       Int     @id @default(autoincrement())
  amount   Float
  note     String?
  type     String // send or withdraw or recurring
  currency String
  amount_converted Float
  to       String?

  paymentAccount   PaymentAccount @relation(fields: [paymentAccountId], references: [id])
  paymentAccountId Int

  paymentHistory PaymentHistory?
  userId         String
  createdAt      DateTime        @default(now())
}

model PaymentHistory {
  id Int @id @default(autoincrement())

  balance_left  Float
  createdAt     DateTime    @default(now())
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId Int         @unique
  userId        String
}

model TransactionRecurring {
  id       Int     @id @default(autoincrement())
  amount   Float
  currency String?
  to       String
  days    Int
  status  Boolean

  paymentAccount   PaymentAccount @relation(fields: [paymentAccountId], references: [id])
  paymentAccountId Int

  userId        String
}